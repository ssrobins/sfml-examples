variables:
  CONAN_USER_HOME: "$CI_PROJECT_DIR"
  CONAN_REVISIONS_ENABLED: "1"
  CONAN_SYSREQUIRES_SUDO: "0"

stages:
  - build

before_script:
  - cmake --version
  - conan --version

.android:
  image: registry.gitlab.com/ssrobins/docker-android-build:jdk8u265-ndk21d
  stage: build
  script:
    - lscpu
    - cat /proc/meminfo | grep MemTotal
    - java -version
    - ./cmake.py $android_arch --build --package --config Release
  artifacts:
    paths:
      - build_$android_arch/_package/*.apk
  except:
    variables:
      - $desktop_only == "true"

androidarm:
  variables:
    android_arch: "androidarm"
  extends: .android

androidarm64:
  variables:
    android_arch: "androidarm64"
  extends: .android

ios:
  stage: build
  script:
    - |
      ./cmake.py ios --build --package --config Release
      if [ "$publish" == "true" ]; then
        xcrun altool --upload-app --file $(find . -name *.ipa | head -n 1) --type ios --username ssrobins@gmail.com --password $APPLEID_PASSWORD
      fi
  artifacts:
    paths:
      - build_ios/_package/*.ipa
  tags:
    - ios
  except:
    variables:
      - $desktop_only == "true"

linux:
  image: registry.gitlab.com/ssrobins/docker-linux-build:gcc9.3.0
  stage: build
  script:
    - lscpu
    - cat /proc/meminfo | grep MemTotal
    - gcc --version
    - ./cmake.py linux --build --test --package --config Release
  artifacts:
    paths:
      - build_linux/_package/*.tar.gz

macos:
  stage: build
  script:
    - ./cmake.py macos --build --test --package --config Release
  artifacts:
    paths:
      - build_macos/_package/*.zip
  tags:
    - mac

windows:
  stage: build
  script:
    - python .\cmake.py windows --build --test --package --config Release
  artifacts:
    paths:
      - build_windows/_package/*.zip
  tags:
    - windows-self-hosted
